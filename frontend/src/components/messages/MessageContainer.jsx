import React, { useEffect } from "react";
import Messages from "./Messages"; 
import MessageInput from "./MessageInput";
import { TiMessages } from "react-icons/ti"; 
import useConversation from "../../zustand/useConversation";
const MessageContainer = () => {
  // Mesaj kutusunun ana bileÅŸeni olarak fonksiyonel bir bileÅŸen tanÄ±mlar.
  const { selectedConversation, setSelectedConversation } = useConversation(); // SeÃ§ilen konuÅŸmayÄ± ve onu sÄ±fÄ±rlamak iÃ§in set fonksiyonunu zustand'dan alÄ±r.

  useEffect(() => {
    // BileÅŸen unmounted (sayfa kapanÄ±rken) olduÄŸunda seÃ§ilen sohbeti sÄ±fÄ±rlamak iÃ§in useEffect kullanÄ±r.
    return () => setSelectedConversation(null); // Sayfa kapandÄ±ÄŸÄ±nda sohbeti sÄ±fÄ±rlar.
  }, [setSelectedConversation]); // Bu efekt yalnÄ±zca setSelectedConversation deÄŸiÅŸtiÄŸinde Ã§alÄ±ÅŸÄ±r.

  return (
    // BileÅŸenin render edeceÄŸi JSX yapÄ±sÄ±nÄ± baÅŸlatÄ±r.
    <div className="md:min-w-[450px] flex flex-col">
      {/* Mesaj kutusunun stilini belirler: belirli bir geniÅŸlik ve flex dÃ¼zeni */}
      {!selectedConversation ? ( // EÄŸer seÃ§ili bir sohbet yoksa, "NoChatSelected" bileÅŸenini gÃ¶sterir.
        <NoChatSelected />
      ) : (
        // Aksi takdirde (yani sohbet seÃ§ildiyse) aÅŸaÄŸÄ±daki iÃ§erik render edilir.
        <>
          <div className="bg-slate-500 px-4 py-2 mb-2">
            {/* Chat baÅŸlÄ±ÄŸÄ±nÄ± ve kimle konuÅŸulduÄŸunu gÃ¶steren alan */}
            <span className="label-text">To:</span> {/* "To:" etiketi */}
            <span className="text-gray-900 font-bold">
              {selectedConversation.fullName} {/* MesajlaÅŸÄ±lacak kiÅŸinin adÄ± */}
            </span>
          </div>
          <Messages /> {/* MesajlarÄ± listeleyen bileÅŸeni render eder */}
          <MessageInput /> {/* Mesaj yazma alanÄ±nÄ± render eder */}
        </>
      )}
    </div>
  );
};

export default MessageContainer; // "MessageContainer" bileÅŸenini dÄ±ÅŸa aktarÄ±r.

const NoChatSelected = () => {
  // "NoChatSelected" isminde bir bileÅŸen tanÄ±mlar.
  return (
    <div className="flex items-center justify-center w-full h-full">
      {/* Chat seÃ§ilmediÄŸinde gÃ¶sterilecek alanÄ±n merkezlenmiÅŸ dÃ¼zeni */}
      <div className="px-4 text-center sm:text-lg md:text-xl text-gray-200 font-semibold flex flex-col items-center gap-2">
        <p>HoÅŸgeldin ğŸ‘‹ KasÄ±m</p> {/* KullanÄ±cÄ±ya hoÅŸ geldin mesajÄ± */}
        <p>Select a chat to start messaging</p>{" "}
        {/* Chat seÃ§ilmesini isteyen mesaj */}
        <TiMessages className="text-xl md:text-4xl text-center" />{" "}
        {/* Mesaj simgesi */}
      </div>
    </div>
  );
};
